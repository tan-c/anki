version: 2
general:
  branches:
    only:
      - master # list of branches to build

jobs:
  init:
    # working_directory: ~/repo

    docker:
      - image: $DOCKER_ADD/js-base-image:latest
        # auth:
          # username: mydockerhub-user
          # password: $DOCKERHUB_PASSWORD
      # - image: circleci/node:8.11
      # - image: circleci/python:3.7

      # Specify service dependencies here if necessary
      # CircleCI maintains a library of pre-built images
      # documented at https://circleci.com/docs/2.0/circleci-images/
      # - image: circleci/mongo:3.4.4

    # working_directory: ~/repo # Needed to build docker as you use .
    # Default is /root/project

    steps:
      # Download and cache dependencies
      - checkout
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "package.json" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-

      # - run: pwd
      # - run: ls -al
      - run: npm ci --production # Have to run it again as the image does not seem to have node_module when used as a base image..

      - run: npx snyk test --severity-threshold=high

      - save_cache:
          key: v1-dependencies-{{ checksum "package.json" }}
          paths:
            - node_modules

      # run tests!
      # - run: yarn test

  test:
    # working_directory: /js-base-image # default is Default is /root/project
    docker:
      - image: $DOCKER_ADD/js-base-image:latest
    steps:
      - checkout
      - run: mkdir -p /js-base-image/packages/anki
      - run: cp -r . /js-base-image/packages/anki/
      - run:
          name: Run test and save coverage result
          command: cd /js-base-image/packages/anki && npm run test:ci
  #     - run:
  #         name: Generate code coverage
  #         command: './node_modules/.bin/nyc report --reporter=text-lcov'
  #     - store_artifacts:
  #         path: test-results.xml
  #         prefix: tests
  #     - store_artifacts:
  #         path: coverage
  #         prefix: coverage
      - run: ls -al /js-base-image/
      - store_test_results:
          path: /js-base-image/coverage/
      - store_artifacts:
          path: /js-base-image//coverage/
      - run: ls -al /js-base-image//coverage/

  push-deploy:
    docker:
      - image: circleci/python:3.7

    steps:
      - checkout

      # You should be able to cache this too..
      - run: sudo apt-get install python-dev
      - run: sudo pip install awscli

      # Building Docker Image, Login and Push
      - setup_remote_docker:
          docker_layer_caching: true

      - run:
          name: docker login
          command: eval "$(aws ecr get-login --no-include-email --region ap-northeast-1)"

      - run:
          name: Building the image and push to ecr
          command: | # Need | to run line by line
            TAG=latest
            docker build -t $REPO_NAME .
            docker tag $REPO_NAME:$TAG $DOCKER_ADD/$REPO_NAME:$TAG
            docker push $DOCKER_ADD/$REPO_NAME:$TAG

      - run:
          name: Logging into ec2 and update the k8s
          command: |
            # environment var wont work because it is in an embedded script
            if [ -z "$PUSH_ONLY" ]; then # Not set is -z, set is -n
              ssh -o StrictHostKeyChecking=no $SSH_USER@$SSH_HOST 'kubectl delete -f k8s/frontend/hourblock.yml && kubectl create -f k8s/frontend/hourblock.yml' # If get long, get a file
            fi

workflows:
  version: 2
  build-deploy:
    jobs:
      # - init
      - test
      #     requires:
      #       - init
      # - push-deploy:
      #     requires:
      #       - test
      # - deploy
