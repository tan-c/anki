# user  nginx; # wont work in openresty
worker_processes  1;

error_log  /var/log/error.log debug; # wont work in openresty
# pid        /var/run/nginx.pid; # wont work in openresty

events {
    worker_connections  1024;
}

http {
    include       mime.types;
    default_type  application/octet-stream;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';
    access_log  /var/log/access.log  main; # wont work in openresty

    sendfile        on;
    #tcp_nopush     on;
    keepalive_timeout  65;
    gzip  on;

    # For Prometheus
    lua_shared_dict prometheus_metrics 10M;
    lua_package_path ';;/usr/local/openresty/site/lualib/?.lua;'; # ;; is the default

    init_by_lua '
    prometheus = require("prometheus").init("prometheus_metrics")
    metric_bytes = prometheus:counter(
        "nginx_http_request_size_bytes", "Total size of incoming requests")
    metric_requests = prometheus:counter(
        "nginx_http_requests_total", "Number of HTTP requests", {"host", "status"})
    metric_connections = prometheus:gauge(
        "nginx_http_connections", "Number of HTTP connections", {"state"})
    metric_latency = prometheus:histogram(
        "nginx_http_request_duration_seconds", "HTTP request latency", {"host"})
    metric_response_sizes = prometheus:histogram(
        "nginx_http_response_size_bytes", "Size of HTTP responses", nil,
        {10,100,1000,10000,100000,1000000})
    ';

    log_by_lua '
    metric_bytes:inc(tonumber(ngx.var.request_length))
    metric_requests:inc(1, {ngx.var.server_name, ngx.var.status})
    metric_latency:observe(tonumber(ngx.var.request_time), {ngx.var.server_name})
    metric_response_sizes:observe(tonumber(ngx.var.bytes_sent))
    ';

    server {
        listen 9145;
        server_name "prometheus_metrics_server";
        allow 10.0.0.0/8; # Only allow traffic from prometheus
        allow 100.64.0.0/10; # Used by k8s, svc are from 64 to 72 but IP for pods go to 96
        allow 127.0.0.1; # Allow localhost?
        deny all;

        location /metrics {
            content_by_lua '
            metric_connections:set(ngx.var.connections_reading, {"reading"})
            metric_connections:set(ngx.var.connections_waiting, {"waiting"})
            metric_connections:set(ngx.var.connections_writing, {"writing"})
            prometheus:collect()
            ';
        }
    }

    # include /usr/local/openresty/nginx/conf.d/default.confï¼› # For openresty
    # include /etc/nginx/conf.d/*.conf;

    server {
        listen 80;
        server_name localhost;
        charset utf-8;

        # charset koi8-r;
        # access_log  /var/log/nginx/host.access.log  main;

        location / {
            root   /dist;
            index  index.html index.htm;
        }

        # location /favicon.ico {
        #     log_not_found off;
        # }

        # redirect server error pages to the static page /50x.html
        #
        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   /usr/share/nginx/html;
        }

        # proxy the PHP scripts to Apache listening on 127.0.0.1:80
        #
        #location ~ \.php$ {
        #    proxy_pass   http://127.0.0.1;
        #}

        # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000
        #
        #location ~ \.php$ {
        #    root           html;
        #    fastcgi_pass   127.0.0.1:9000;
        #    fastcgi_index  index.php;
        #    fastcgi_param  SCRIPT_FILENAME  /scripts$fastcgi_script_name;
        #    include        fastcgi_params;
        #}

        # deny access to .htaccess files, if Apache's document root
        # concurs with nginx's one
        #
        #location ~ /\.ht {
        #    deny  all;
        #}
    }
}


